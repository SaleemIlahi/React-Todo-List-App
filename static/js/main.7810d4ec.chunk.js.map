{"version":3,"sources":["Plan.js","App.js","reportWebVitals.js","index.js"],"names":["Plan","props","value","type","onClick","sendData","id","App","state","items","text","handleChange","e","setState","target","handleAdd","handleDelete","filter","el","i","className","placeholder","this","onChange","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAUeA,EARF,SAACC,GACV,OACQ,mCACI,+BAAKA,EAAMC,MAAX,IAAkB,wBAAQC,KAAK,SAASC,QAAS,kBAAMH,EAAMI,SAASJ,EAAMK,KAA1D,qBCD5BC,E,4MACJC,MAAO,CACLC,MAAO,GACPC,KAAM,I,EAGRC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOZ,S,EAInBa,UAAY,WACV,GAAuB,KAApB,EAAKP,MAAME,KAAY,CACxB,IAAMD,EAAK,sBAAO,EAAKD,MAAMC,OAAlB,CAAwB,EAAKD,MAAME,OAC9C,EAAKG,SAAS,CACZJ,MAAOA,EACPC,KAAM,O,EAKZM,aAAe,SAACV,GACd,IACMG,EADQ,YAAO,EAAKD,MAAMC,OACTQ,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMb,KAE9C,EAAKO,SAAS,CAACJ,MAAOA,K,4CAGxB,WAAU,IAAD,OACP,OACE,sBAAKW,UAAU,YAAf,UACE,+CACA,sBAAKA,UAAU,YAAf,UACE,uBAAOjB,KAAK,OAAOkB,YAAY,kBAAkBD,UAAU,QAAQlB,MAAOoB,KAAKd,MAAME,KAAMa,SAAUD,KAAKX,eAC1G,wBAAQR,KAAK,SAASC,QAASkB,KAAKP,UAApC,oBAEF,6BACGO,KAAKd,MAAMC,MAAMe,KAAI,SAACtB,EAAMiB,GAAP,OAAa,cAAC,EAAD,CAAcb,GAAIa,EAAGjB,MAAOA,EAAOG,SAAU,EAAKW,cAAvCG,e,GAtCtCM,aA6CHlB,ICrCAmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7810d4ec.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Plan = (props) => {\r\n    return(\r\n            <>\r\n                <li>{props.value} <button type=\"button\" onClick={() => props.sendData(props.id)}>X</button></li>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Plan","import React, { Component } from 'react'\nimport './App.css';\nimport Plan from './Plan';\n\nclass App extends Component {\n  state= {\n    items: [],\n    text: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      text: e.target.value\n    })\n  }\n\n  handleAdd = () => {\n    if(this.state.text !== \"\"){\n      const items = [...this.state.items,this.state.text]\n      this.setState({\n        items: items,\n        text: \"\"\n      })\n    }\n  }\n\n  handleDelete = (id) => {\n    const oldItems = [...this.state.items]\n    const items = oldItems.filter((el,i) => i !== id)\n\n    this.setState({items: items})\n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Todo List App</h1>\n        <div className=\"input-box\">\n          <input type=\"text\" placeholder=\"Enter your plan\" className=\"input\" value={this.state.text} onChange={this.handleChange} />\n          <button type=\"button\" onClick={this.handleAdd}>Add</button>\n        </div>\n        <ul>\n          {this.state.items.map((value,i) => <Plan key={i} id={i} value={value} sendData={this.handleDelete} />)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}